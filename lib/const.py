import glob
import os

import numpy as np

# https://arxiv.org/pdf/2501.05665
# https://github.com/des-science/eastlake/blob/main/eastlake/des_piff.py#L17-L20
GI_COLOR = 1.1
IZ_COLOR = 0.34

BANDS = ["g", "r", "i", "z"]
TRUTH_BANDS = ["u", "g", "r", "i", "z", "Y", "J",  "H", "Ks"]
DEEPFIELD_BANDS = ["u", "g", "r", "i", "z", "Y", "J", "H", "K"]

SHEAR_STEPS = [
    "g1_slice=0.02__g2_slice=0.00__g1_other=0.00__g2_other=0.00__zlow=0.0__zhigh=6.0",
    "g1_slice=-0.02__g2_slice=0.00__g1_other=0.00__g2_other=0.00__zlow=0.0__zhigh=6.0",
    "g1_slice=0.02__g2_slice=0.00__g1_other=-0.02__g2_other=0.00__zlow=0.6__zhigh=0.9",
    "g1_slice=0.02__g2_slice=0.00__g1_other=-0.02__g2_other=0.00__zlow=1.8__zhigh=2.1",
    "g1_slice=0.02__g2_slice=0.00__g1_other=-0.02__g2_other=0.00__zlow=0.9__zhigh=1.2",
    "g1_slice=0.02__g2_slice=0.00__g1_other=-0.02__g2_other=0.00__zlow=2.1__zhigh=2.4",
    "g1_slice=0.02__g2_slice=0.00__g1_other=-0.02__g2_other=0.00__zlow=0.0__zhigh=0.3",
    "g1_slice=0.02__g2_slice=0.00__g1_other=-0.02__g2_other=0.00__zlow=1.2__zhigh=1.5",
    "g1_slice=0.02__g2_slice=0.00__g1_other=-0.02__g2_other=0.00__zlow=2.4__zhigh=2.7",
    "g1_slice=0.02__g2_slice=0.00__g1_other=-0.02__g2_other=0.00__zlow=0.3__zhigh=0.6",
    "g1_slice=0.02__g2_slice=0.00__g1_other=-0.02__g2_other=0.00__zlow=1.5__zhigh=1.8",
    "g1_slice=0.02__g2_slice=0.00__g1_other=-0.02__g2_other=0.00__zlow=2.7__zhigh=6.0",
]

MDET_STEPS = [
    "noshear",
    "1p",
    "1m",
    "2p",
    "2m",
]

Y6_SHEAR_CATALOG = "/global/cfs/projectdirs/des/y6-shear-catalogs/Y6A2_METADETECT_V6_UNBLINDED/metadetect_cutsv6_all.h5"
Y6_REDSHIFT_CATALOG = "/global/cfs/cdirs/des/y6-redshift/sompz_v6_10000Tile_final_unblind_24-11-05.h5"
Y6_TOMOGRAPHY_CATALOG = "/global/cfs/cdirs/des/y6-image-sims/fiducial-tomography/tomography_y6.hdf5"

DEEPFIELD_CATALOG = "/global/cfs/cdirs/desbalro/DES_DF_COSMOS.fits"
DES_COSMOS_CATALOG = "/global/cfs/cdirs/desbalro/des_cosmos_data_v2.fits"
SOURCE_CATALOG = "/global/cfs/cdirs/desbalro/input_cosmos_v4.fits"
TRUTH_CATALOG = "/global/cfs/cdirs/desbalro/input_cosmos_v4_montara_simcat_v7_seed42.fits"

TRUTH_DIR = "/global/cfs/cdirs/desbalro/cosmos_simcat/"
TRUTH_CATALOGS = {}
for _truth_file in glob.glob(f"{TRUTH_DIR}/*.fits"):
    _tilename = _truth_file.split("/")[-1].split("_")[3]
    TRUTH_CATALOGS[_tilename] = _truth_file

SIM_SHEAR_DIR = "/global/cfs/cdirs/des/y6-image-sims/fiducial/"
SIM_SHEAR_CATALOGS = {
    shear_step: os.path.join(
        SIM_SHEAR_DIR,
        shear_step,
        "metadetect_cutsv6_all.h5",
    )
    for shear_step in SHEAR_STEPS
}

SIM_MATCH_DIR = "/global/cfs/cdirs/des/y6-image-sims/fiducial-matches/"
SIM_MATCH_CATALOGS = {
    shear_step: os.path.join(
        SIM_MATCH_DIR,
        f"match_{shear_step}.hdf5",
    )
    for shear_step in SHEAR_STEPS
}

SIM_TRUTH_MATCH_CATALOG = "/global/cfs/cdirs/des/y6-image-sims/fiducial-matches/truth-match.hdf5"

SIM_REDSHIFT_DIR = "/global/cfs/cdirs/des/boyan/sompz_output/y6_imsim_1000Tile/h5_sim_response_matchmerge_transfer/"
SIM_REDSHIFT_CATALOGS = {
    shear_step: os.path.join(
        SIM_REDSHIFT_DIR,
        f"{shear_step}_sompz_fidbin.h5",
    )
    for shear_step in SHEAR_STEPS
}

SIM_TOMOGRAPHY_DIR = "/global/cfs/cdirs/des/y6-image-sims/fiducial-tomography"
SIM_TOMOGRAPHY_CATALOGS = {
    shear_step: os.path.join(
        SIM_TOMOGRAPHY_DIR,
        f"tomography_{shear_step}.hdf5",
    )
    for shear_step in SHEAR_STEPS
}

SIM_WEIGHT_DIR = "/global/cfs/cdirs/des/y6-image-sims/fiducial-weights"
SIM_WEIGHT_CATALOGS = {
    shear_step: os.path.join(
        SIM_WEIGHT_DIR,
        f"weights_{shear_step}.hdf5",
    )
    for shear_step in SHEAR_STEPS
}

ZEROPOINT = 30

TOMOGRAPHIC_BINS = [0, 1, 2, 3]

SOM_SHAPE = (32, 32)
CELL_IDS = list(range(1024 + 1))

CELL_ASSIGNMENTS = {
    0: np.array([
          24,   25,   26,   27,   28,   29,   30,   31,   55,   56,   57,
          58,   59,   60,   61,   62,   63,  159,  191,  223,  406,  407,
         408,  414,  415,  438,  439,  440,  444,  445,  446,  447,  469,
         470,  471,  472,  473,  474,  475,  476,  477,  478,  479,  502,
         503,  504,  505,  506,  507,  508,  509,  510,  511,  536,  537,
         538,  539,  540,  541,  542,  543,  568,  569,  570,  571,  572,
         573,  574,  575,  600,  601,  602,  603,  604,  605,  606,  607,
         631,  632,  633,  634,  635,  636,  637,  638,  639,  640,  663,
         664,  665,  666,  667,  668,  669,  670,  671,  672,  673,  695,
         696,  697,  698,  699,  700,  701,  702,  703,  704,  705,  706,
         708,  730,  731,  732,  733,  734,  735,  736,  737,  738,  739,
         740,  741,  748,  761,  762,  763,  764,  765,  766,  767,  768,
         769,  770,  771,  772,  773,  774,  780,  781,  793,  794,  795,
         796,  797,  798,  799,  800,  801,  802,  803,  804,  805,  813,
         824,  825,  826,  827,  828,  829,  830,  831,  832,  833,  834,
         835,  836,  837,  838,  841,  845,  856,  857,  858,  861,  862,
         863,  864,  865,  866,  869,  870,  874,  887,  888,  889,  896,
         897,  898,  899,  900,  901,  902,  903,  904,  905,  906,  907,
         917,  918,  919,  920,  921,  928,  929,  930,  931,  932,  933,
         934,  935,  936,  937,  938,  939,  940,  941,  949,  950,  951,
         952,  953,  960,  961,  962,  963,  964,  965,  966,  967,  968,
         969,  970,  971,  972,  973,  974,  975,  976,  977,  978,  979,
         980,  981,  982,  983,  984,  985,  992,  993,  994,  995,  996,
         997,  998,  999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
        1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017
    ]),
    1: np.array([
          15,   16,   17,   23,  341,  352,  373,  374,  384,  385,  386,
         416,  417,  418,  419,  420,  421,  448,  449,  450,  451,  452,
         453,  454,  455,  462,  463,  468,  480,  481,  482,  483,  484,
         485,  486,  487,  488,  489,  490,  491,  492,  493,  494,  495,
         497,  498,  499,  500,  501,  512,  513,  514,  515,  516,  517,
         518,  519,  520,  521,  522,  523,  524,  525,  530,  531,  532,
         533,  534,  535,  544,  545,  546,  547,  548,  549,  550,  551,
         552,  553,  554,  555,  563,  564,  565,  566,  567,  576,  577,
         578,  579,  580,  581,  582,  583,  584,  585,  586,  587,  595,
         596,  597,  598,  599,  608,  609,  610,  611,  612,  613,  614,
         615,  616,  617,  618,  619,  627,  628,  629,  630,  641,  642,
         643,  644,  645,  646,  647,  648,  649,  650,  651,  659,  660,
         661,  662,  674,  675,  676,  677,  678,  679,  680,  681,  682,
         683,  684,  685,  690,  691,  692,  693,  694,  707,  709,  710,
         711,  712,  713,  714,  715,  716,  717,  718,  721,  722,  723,
         724,  725,  726,  727,  728,  729,  742,  743,  744,  745,  746,
         747,  749,  750,  751,  752,  753,  754,  755,  756,  757,  758,
         759,  760,  775,  776,  777,  778,  779,  782,  783,  784,  785,
         786,  787,  788,  789,  790,  791,  792,  806,  807,  808,  809,
         810,  811,  812,  814,  815,  816,  817,  818,  819,  820,  821,
         822,  823,  839,  840,  842,  843,  844,  846,  847,  848,  849,
         850,  851,  852,  853,  854,  855,  859,  860,  867,  868,  871,
         872,  873,  875,  876,  877,  878,  879,  880,  881,  882,  883,
         884,  885,  886,  890,  891,  892,  893,  894,  895,  908,  909,
         910,  911,  912,  913,  914,  915,  916,  922,  923,  924,  925,
         926,  927,  942,  943,  944,  945,  946,  947,  948,  954,  955,
         956,  957,  958,  959,  986,  987,  988,  989,  990,  991, 1018,
        1019, 1020, 1021, 1022, 1023
    ]),
    2: np.array([
          6,  18,  19,  20,  21,  22,  37,  38,  51,  52,  53,  54,  68,
         69,  70,  71,  72,  84,  85,  86,  98,  99, 100, 101, 102, 103,
        104, 105, 116, 117, 118, 128, 129, 130, 131, 132, 133, 134, 135,
        136, 137, 138, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168,
        169, 170, 171, 181, 192, 193, 194, 195, 196, 197, 198, 199, 200,
        201, 202, 203, 204, 205, 212, 213, 224, 225, 226, 227, 228, 229,
        230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
        243, 244, 245, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
        266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 288, 289,
        290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304,
        305, 306, 307, 308, 309, 310, 320, 321, 322, 323, 324, 325, 326,
        327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 342,
        353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366,
        367, 368, 369, 370, 371, 372, 387, 388, 389, 390, 391, 392, 393,
        394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 422,
        423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
        436, 437, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 496,
        526, 527, 528, 529, 556, 557, 558, 559, 560, 561, 562, 588, 589,
        590, 591, 592, 593, 594, 620, 621, 622, 623, 624, 625, 626, 652,
        653, 654, 655, 656, 657, 658, 686, 687, 688, 689, 719, 720
    ]),
    3: np.array([
          0,   1,   2,   3,   4,   5,   7,   8,   9,  10,  11,  12,  13,
         14,  32,  33,  34,  35,  36,  39,  40,  41,  42,  43,  44,  45,
         46,  47,  48,  49,  50,  64,  65,  66,  67,  73,  74,  75,  76,
         77,  78,  79,  80,  81,  82,  83,  87,  88,  89,  90,  91,  92,
         93,  94,  95,  96,  97, 106, 107, 108, 109, 110, 111, 112, 113,
        114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140,
        141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154,
        155, 156, 157, 158, 172, 173, 174, 175, 176, 177, 178, 179, 180,
        182, 183, 184, 185, 186, 187, 188, 189, 190, 206, 207, 208, 209,
        210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 246, 247,
        248, 249, 250, 251, 252, 253, 254, 255, 267, 278, 279, 280, 281,
        282, 283, 284, 285, 286, 287, 299, 300, 311, 312, 313, 314, 315,
        316, 317, 318, 319, 332, 333, 343, 344, 345, 346, 347, 348, 349,
        350, 351, 365, 375, 376, 377, 378, 379, 380, 381, 382, 383, 409,
        410, 411, 412, 413, 441, 442, 443
    ]),
}

ZVALS = np.array([
    0.   , 0.035, 0.085, 0.135, 0.185, 0.235, 0.285, 0.335, 0.385,
    0.435, 0.485, 0.535, 0.585, 0.635, 0.685, 0.735, 0.785, 0.835,
    0.885, 0.935, 0.985, 1.035, 1.085, 1.135, 1.185, 1.235, 1.285,
    1.335, 1.385, 1.435, 1.485, 1.535, 1.585, 1.635, 1.685, 1.735,
    1.785, 1.835, 1.885, 1.935, 1.985, 2.035, 2.085, 2.135, 2.185,
    2.235, 2.285, 2.335, 2.385, 2.435, 2.485, 2.535, 2.585, 2.635,
    2.685, 2.735, 2.785, 2.835, 2.885, 2.935, 2.985])

ZEDGES = np.array([0.  , 0.01, 0.06, 0.11, 0.16, 0.21, 0.26, 0.31, 0.36, 0.41, 0.46,
       0.51, 0.56, 0.61, 0.66, 0.71, 0.76, 0.81, 0.86, 0.91, 0.96, 1.01,
       1.06, 1.11, 1.16, 1.21, 1.26, 1.31, 1.36, 1.41, 1.46, 1.51, 1.56,
       1.61, 1.66, 1.71, 1.76, 1.81, 1.86, 1.91, 1.96, 2.01, 2.06, 2.11,
       2.16, 2.21, 2.26, 2.31, 2.36, 2.41, 2.46, 2.51, 2.56, 2.61, 2.66,
       2.71, 2.76, 2.81, 2.86, 2.91, 2.96, 3.01])
